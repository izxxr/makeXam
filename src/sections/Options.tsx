import { useEffect, useState } from "react";
import { Form, Input, Divider, Checkbox, Tooltip } from "@heroui/react";
import { TextList } from "../components/TextList";
import { QuestionsList } from "../components/QuestionsList";
import type { Exam, Question } from "../types";

interface OptionsProps {
    setExamData: (arg0: Exam) => undefined
}

export default function Options(props: OptionsProps) {
    const [title, setTitle] = useState("");
    const [subtitle, setSubtitle] = useState("");
    const [frontPageFormat, setFrontPageFormat] = useState(false);
    const [includeBranding, setIncludeBranding] = useState(true);
    const [includePageNumbers, setIncludePageNumbers] = useState(true);
    const [includeGradingTable, setIncludeGradingTable] = useState(false);
    const [instructionsHeader, setInstructionsHeader] = useState("");
    const [instructions, setInstructions]: [string[], any] = useState([]);
    const [inputFields, setInputFields]: [string[], any] = useState([]);
    const [questions, setQuestions]: [Question[], any] = useState([]);

    useEffect(() => {
        let examData: Exam = {
            title: title,
            subtitle: subtitle,
            front_page_format: frontPageFormat,
            include_branding: includeBranding,
            include_page_numbers: includePageNumbers,
            include_grading_table: includeGradingTable,
            instructions: instructions,
            instructions_header: instructionsHeader,
            input_fields: inputFields,
            questions: questions,
        };
        props.setExamData(examData);
    }, [
        title,
        subtitle,
        frontPageFormat,
        includeBranding,
        includePageNumbers,
        includeGradingTable,
        inputFields,
        instructionsHeader,
        instructions,
        questions,
    ])

    return (
        <div className="w-full overflow-y-scroll p-10">
            <Form>
                <div className="flex flex-row gap-10 flex-wrap pb-5">
                    <Input
                        label="Title"
                        labelPlacement="outside-top"
                        name="title"
                        color="default"
                        className="w-80"
                        placeholder="e.g. MATH 101: Calculus"
                        value={title}
                        onChange={(e) => {setTitle(e.target.value)}}
                    />
                    <Input
                        label="Subtitle"
                        labelPlacement="outside-top"
                        name="subtitle"
                        className="w-80"
                        placeholder="e.g. Final Exam"
                        value={subtitle}
                        onChange={(e) => {setSubtitle(e.target.value)}}
                    />
                </div>

                <h1 className="font-medium text-sm text-default-800">Format Settings</h1>
                <div className="flex flex-row gap-10 flex-wrap pb-10">
                    <Tooltip closeDelay={0} content="Use front page format. Questions begin from second page">
                        <Checkbox
                            checked={frontPageFormat}
                            onChange={(e) => {setFrontPageFormat(e.target.checked)}}
                            size="sm"
                        >
                            Front Page
                        </Checkbox>
                    </Tooltip>
                    <Tooltip closeDelay={0} content={"Include \"Generated by makeXam\" branding in the footer"}>
                        <Checkbox
                            isSelected={includeBranding}
                            onChange={(e) => {setIncludeBranding(e.target.checked)}}
                            size="sm"
                        >
                            MakeXam Branding
                        </Checkbox>
                    </Tooltip>
                    <Tooltip closeDelay={0} content={"Include page numbers in the footer"}>
                        <Checkbox
                            isSelected={includePageNumbers}
                            onChange={(e) => {setIncludePageNumbers(e.target.checked)}}
                            size="sm"
                        >
                            Page Numbers
                        </Checkbox>
                    </Tooltip>
                    <Tooltip closeDelay={0} content={"Include a grading table on front page to record individual questions score"}>
                        <Checkbox
                            checked={includeGradingTable}
                            onChange={(e) => {setIncludeGradingTable(e.target.checked)}}
                            size="sm"
                        >
                            Grading Table
                        </Checkbox>
                    </Tooltip>
                </div>

                {/* ---- Input Fields --------- */}
                <h1 className="font-bold text-lg text-default-800">Input Fields</h1>
                <h2 className="text-sm text-default-500">Fields to be filled by the exam taker such as name or roll number.</h2>
                <Divider className="mb-4" />
                <div className="pb-10">
                    <TextList
                        type="input_field"
                        addNewLabel="New Field"
                        values={inputFields}
                        setValues={setInputFields}
                        {...props}
                    />
                </div>

                {/* ---- Instructions --------- */}
                <h1 className="font-bold text-lg text-default-800">Instructions</h1>
                <h2 className="text-sm text-default-500">Include guidelines for exam takers.</h2>
                <Divider className="mb-4" />
                <div className="pb-2">
                    <TextList
                        type="instruction"
                        addNewLabel="New Instruction"
                        values={instructions}
                        setValues={setInstructions}
                        {...props}
                    />
                </div>
                <Input
                    label="Instructions Heading"
                    name="title"
                    color="default"
                    className="w-80 pb-10"
                    description="Defines the title for instructions section."
                    size="sm"
                    value={instructionsHeader}
                    onChange={(e) => setInstructionsHeader(e.target.value)}
                />

                {/* ---- Questions --------- */}
                <h1 className="font-bold text-lg text-default-800">Questions</h1>
                <h2 className="text-sm text-default-500">These are the questions to include in exam.</h2>
                <Divider className="mb-4" />
                <div className="pb-10">
                    <QuestionsList
                        questions={questions}
                        setQuestions={setQuestions}
                        {...props}
                    />
                </div>
            </Form>
        </div>
    )
}