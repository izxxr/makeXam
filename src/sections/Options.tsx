import * as examActions from "../features/exam/examSlice.ts";
import * as instructionsActions from "../features/instructions/instructionsSlice.ts"; 
import * as inputFieldsActions from "../features/inputFields/inputFieldsSlice.ts";
import { Form, Input, Divider, Checkbox, Tooltip, Button, addToast } from "@heroui/react";
import { ShareAltOutlined } from "@ant-design/icons";
import { TextList } from "../components/TextList";
import { QuestionsList } from "../components/QuestionsList";
import { useAppSelector, useAppDispatch } from '../hooks.ts';

export default function Options() {
    const dispatch = useAppDispatch()
    const exam = useAppSelector(state => state.exam.value)
    const inputFields = useAppSelector(state => state.inputFields.value)
    const instructions = useAppSelector(state => state.instructions.value)
    const examData = useAppSelector(state => state.examData.value)

    return (
        <div className="w-full overflow-y-scroll p-10">
            <Form>
                <div className="mb-3">
                    <Button
                        size="sm"
                        color="default"
                        onMouseDown={() => {
                            let shareURL = (
                                window.location.protocol + "//" +
                                window.location.host +
                                window.location.pathname +
                                '?data=' +
                                btoa(JSON.stringify(examData))
                            );

                            navigator.clipboard.writeText(shareURL).then(() => {
                                addToast({
                                    title: "Copied to Clipboard",
                                    description: "The exam sharing link has been copied. Exam data can be shared using this link.",
                                    color: "primary"
                                })
                            }).catch(() => {
                                addToast({
                                    title: "Error",
                                    description: "Could not copy share link. Try reloading the page.",
                                    color: "danger",
                                })
                            })
                        }}
                    >
                        <ShareAltOutlined />
                        Share Exam
                    </Button>
                </div>
                <Divider className="mb-3" />
                <div className="flex flex-row gap-10 flex-wrap pb-5">
                    <Input
                        label="Title"
                        labelPlacement="outside-top"
                        name="title"
                        color="default"
                        className="w-80"
                        placeholder="e.g. MATH 101: Calculus"
                        value={exam.title}
                        onChange={(e) => dispatch(examActions.setTitle(e.target.value))}
                    />
                    <Input
                        label="Subtitle"
                        labelPlacement="outside-top"
                        name="subtitle"
                        className="w-80"
                        placeholder="e.g. Final Exam"
                        value={exam.subtitle}
                        onChange={(e) => dispatch(examActions.setSubtitle(e.target.value))}
                    />
                </div>

                <h1 className="font-medium text-sm text-default-800">Format Settings</h1>
                <div className="flex flex-row gap-10 flex-wrap pb-10">
                    <Tooltip closeDelay={0} content="Use front page format. Questions begin from second page">
                        <Checkbox
                            isSelected={exam.frontPageFormat}
                            onChange={(e) => dispatch(examActions.setFrontPageFormat(e.target.checked))}
                            size="sm"
                        >
                            Front Page
                        </Checkbox>
                    </Tooltip>
                    <Tooltip closeDelay={0} content={"Include \"Generated by makeXam\" branding in the footer"}>
                        <Checkbox
                            isSelected={exam.includeBranding}
                            onChange={(e) => dispatch(examActions.setIncludeBranding(e.target.checked))}
                            size="sm"
                        >
                            MakeXam Branding
                        </Checkbox>
                    </Tooltip>
                    <Tooltip closeDelay={0} content={"Include page numbers in the footer"}>
                        <Checkbox
                            isSelected={exam.includePageNumbers}
                            onChange={(e) => dispatch(examActions.setIncludePageNumbers(e.target.checked))}
                            size="sm"
                        >
                            Page Numbers
                        </Checkbox>
                    </Tooltip>
                    <Tooltip closeDelay={0} content={"Include a grading table on front page to record individual questions score"}>
                        <Checkbox
                            isSelected={exam.includeGradingTable}
                            onChange={(e) => dispatch(examActions.setIncludeGradingTable(e.target.checked))}
                            size="sm"
                        >
                            Grading Table
                        </Checkbox>
                    </Tooltip>
                </div>

                {/* ---- Input Fields --------- */}
                <h1 className="font-bold text-lg text-default-800">Input Fields</h1>
                <h2 className="text-sm text-default-500">Fields to be filled by the exam taker such as name or roll number.</h2>
                <Divider className="mb-4" />
                <div className="pb-10">
                    <TextList
                        type="input_field"
                        addNewLabel="New Field"
                        values={inputFields}
                        createValue={inputFieldsActions.createInputField}
                        removeValue={inputFieldsActions.removeInputField}
                        updateValue={inputFieldsActions.updateInputField}
                        moveValue={inputFieldsActions.moveInputField}
                        useActions={true}
                    />
                </div>

                {/* ---- Instructions --------- */}
                <h1 className="font-bold text-lg text-default-800">Instructions</h1>
                <h2 className="text-sm text-default-500">Include guidelines for exam takers.</h2>
                <Divider className="mb-4" />
                <div className="pb-2">
                    <TextList
                        type="instruction"
                        addNewLabel="New Instruction"
                        values={instructions}
                        createValue={instructionsActions.createInstruction}
                        removeValue={instructionsActions.removeInstruction}
                        updateValue={instructionsActions.updateInstruction}
                        moveValue={instructionsActions.moveInstruction}
                        useActions={true}
                    />
                </div>
                <Input
                    label="Instructions Heading"
                    name="title"
                    color="default"
                    className="w-80 pb-10"
                    description="Defines the title for instructions section."
                    size="sm"
                    value={exam.instructionsHeader}
                    onChange={(e) => dispatch(examActions.setInstructionsHeader(e.target.value))}
                />

                {/* ---- Questions --------- */}
                <h1 className="font-bold text-lg text-default-800">Questions</h1>
                <h2 className="text-sm text-default-500">These are the questions to include in exam.</h2>
                <Divider className="mb-4" />
                <div className="pb-10">
                    <QuestionsList />
                </div>
            </Form>
        </div>
    )
}