import { Form, Input, Divider, Checkbox, Tooltip, Button, addToast } from "@heroui/react";
import { ShareAltOutlined } from "@ant-design/icons";
import { TextList } from "../components/TextList";
import { QuestionsList } from "../components/QuestionsList";
import type { Exam } from "../types";

interface OptionsProps {
    fromData: boolean
    exam: Exam
    setExamData: (arg0: Exam) => undefined
}

export default function Options(props: OptionsProps) {
    const updateExamField = (key: string, value: any) => {
        let newExam = { ...props.exam };
        // @ts-ignore
        newExam[key] = value;

        props.setExamData(newExam)
    }

    return (
        <div className="w-full overflow-y-scroll p-10">
            <Form>
                <div className="mb-3">
                    <Button
                        size="sm"
                        color="default"
                        onMouseDown={() => {
                            let data = btoa(JSON.stringify(props.exam));
                            let shareURL = window.location.protocol + "//" + window.location.host + window.location.pathname + '?data=' + data;

                            navigator.clipboard.writeText(shareURL).then(() => {
                                addToast({
                                    title: "Copied to Clipboard",
                                    description: "The exam sharing link has been copied. Exam data can be shared using this link.",
                                    color: "primary"
                                })
                            }).catch(() => {
                                addToast({
                                    title: "Error",
                                    description: "Could not copy share link. Try reloading the page.",
                                    color: "danger",
                                })
                            })
                        }}
                    >
                        <ShareAltOutlined />
                        Share Exam
                    </Button>
                </div>
                <Divider className="mb-3" />
                <div className="flex flex-row gap-10 flex-wrap pb-5">
                    <Input
                        label="Title"
                        labelPlacement="outside-top"
                        name="title"
                        color="default"
                        className="w-80"
                        placeholder="e.g. MATH 101: Calculus"
                        value={props.exam.title}
                        onChange={(e) => updateExamField("title", e.target.value)}
                    />
                    <Input
                        label="Subtitle"
                        labelPlacement="outside-top"
                        name="subtitle"
                        className="w-80"
                        placeholder="e.g. Final Exam"
                        value={props.exam.subtitle}
                        onChange={(e) => updateExamField("subtitle", e.target.value)}
                    />
                </div>

                <h1 className="font-medium text-sm text-default-800">Format Settings</h1>
                <div className="flex flex-row gap-10 flex-wrap pb-10">
                    <Tooltip closeDelay={0} content="Use front page format. Questions begin from second page">
                        <Checkbox
                            isSelected={props.exam.front_page_format}
                            onChange={(e) => updateExamField("front_page_format", e.target.checked)}
                            size="sm"
                        >
                            Front Page
                        </Checkbox>
                    </Tooltip>
                    <Tooltip closeDelay={0} content={"Include \"Generated by makeXam\" branding in the footer"}>
                        <Checkbox
                            isSelected={props.exam.include_branding}
                            onChange={(e) => updateExamField("include_branding", e.target.checked)}
                            size="sm"
                        >
                            MakeXam Branding
                        </Checkbox>
                    </Tooltip>
                    <Tooltip closeDelay={0} content={"Include page numbers in the footer"}>
                        <Checkbox
                            isSelected={props.exam.include_page_numbers}
                            onChange={(e) => updateExamField("include_page_numbers", e.target.checked)}
                            size="sm"
                        >
                            Page Numbers
                        </Checkbox>
                    </Tooltip>
                    <Tooltip closeDelay={0} content={"Include a grading table on front page to record individual questions score"}>
                        <Checkbox
                            isSelected={props.exam.include_grading_table}
                            onChange={(e) => updateExamField("include_grading_table", e.target.checked)}
                            size="sm"
                        >
                            Grading Table
                        </Checkbox>
                    </Tooltip>
                </div>

                {/* ---- Input Fields --------- */}
                <h1 className="font-bold text-lg text-default-800">Input Fields</h1>
                <h2 className="text-sm text-default-500">Fields to be filled by the exam taker such as name or roll number.</h2>
                <Divider className="mb-4" />
                <div className="pb-10">
                    <TextList
                        type="input_field"
                        addNewLabel="New Field"
                        values={props.exam.input_fields}
                        setValues={(values) => updateExamField("input_fields", values)}
                        {...props}
                    />
                </div>

                {/* ---- Instructions --------- */}
                <h1 className="font-bold text-lg text-default-800">Instructions</h1>
                <h2 className="text-sm text-default-500">Include guidelines for exam takers.</h2>
                <Divider className="mb-4" />
                <div className="pb-2">
                    <TextList
                        type="instruction"
                        addNewLabel="New Instruction"
                        values={props.exam.instructions}
                        setValues={(values) => updateExamField("instructions", values)}
                        {...props}
                    />
                </div>
                <Input
                    label="Instructions Heading"
                    name="title"
                    color="default"
                    className="w-80 pb-10"
                    description="Defines the title for instructions section."
                    size="sm"
                    value={props.exam.instructions_header}
                    onChange={(e) => updateExamField("instructions_header", e.target.value)}
                />

                {/* ---- Questions --------- */}
                <h1 className="font-bold text-lg text-default-800">Questions</h1>
                <h2 className="text-sm text-default-500">These are the questions to include in exam.</h2>
                <Divider className="mb-4" />
                <div className="pb-10">
                    <QuestionsList
                        questions={props.exam.questions}
                        setQuestions={(questions) => updateExamField("questions", questions)}
                        {...props}
                    />
                </div>
            </Form>
        </div>
    )
}